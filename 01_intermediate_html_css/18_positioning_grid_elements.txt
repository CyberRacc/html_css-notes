
### Positioning Grid Elements ###

## Reviewing Tracks ##

    When you define a grid using grid-template, you are defining the tracks the grid
    will have.

    You can think of a grid track as any single row or column on a grid.

    If we wanted to create a 3x3 grid with 100 pixel rows and 100 pixel columns, we need
    to define 3 horizontal tracks with a height of 100 pixels and 3 vertical tracks with
    a width of 100 pixels:

        .container {
            display: grid;
            grid-template-rows: 100px 100px 100px;
            grid-template-columns: 100px 100px 100px;
            }

        .item {
            background-color: orange;
            border: 1px solid black;
            text-align: center;
        }

        .first-row {
            /*   background-color: pink; */
        }

        .last-column {
            /*   background-color: lightblue; */
        }

## Lines ##

    Whenever we create grid tracks, grid lines are created implicitly. This is important.

    Grid lines are onyl created after our grid tracks have been defined.

    We cannot explicitly create grid lines.

    Every track has a start line and an end line. The lines are numbered from left to right
    and top to bottom starting at 1.

    So the 3x3 grid above has vertical lines for columns ranging from 1 to 4 and horizontal
    lines for rows ranging from 1 to 4.

    Grid lines are what we use to position grid items.

    Developer tools also show negative lines opposite from the positive lines When
    looking at line numbers in web dev tools.


