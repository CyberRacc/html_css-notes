
If you use the font-family property to change to a font like impact or New Times Roman,
and those fonts are not installed on the user's device, then a fallback font will be displayed.

If you have not defined a fallback, then the default HTML font will be used, which is ugly.

For this reason it's common to see long stacks of fonts like the below:

body {
  font-family: system-ui, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
}

The point of this long string of font-families is to try to use the defualt font
of the system's user interface. It will go through each of those fonts until it finds
one that is installed on the system, and use that.

Using a stack like this often produces pleasing results, especially if you're going for
a "neutral" font style.


You can also import and use fonts from external places like Google Fonts, Font Library,
or the premium, but non-free Adobe Fonts, these don't have to be installed on the user's device.

You can use a <link> tag in HTML to import it.

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto&display=swap" rel="stylesheet">

Or an @import tag at the top of a CSS file.

    @import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');

Either method will make the font available for use in CSS:

    body {
        font-family: 'Roboto', sans-serif;
    }

It's still good to have a fall-back font in case the url changes or the server goes down, breaking things.

You can also use downloaded fonts.

You can import and define a custom font using the @font-face rule and use it same as 
any other font-family.


@font-face {
  font-family: my-cool-font;
  src: url(../fonts/the-font-file.woff);
}

h1 {
  font-family: my-cool-font, sans-serif;
}

## Text Styles ##

    font-style

        Typically used to make the font italic.

        Use font-style: italic; when you need to style a whole element.

        Use <em> when you want to highlight the middle of a sentence
        with italics and emphasis.

        We should use font-style: italic; if italics is required for styling purposes.

            h1 {
                font-style: italic;
            }


        We should use the em element if italics is required for emphasis.

        <p>I <em>never</em> said he stole your money</p>
        <p>I never said <em>he</em> stole your money</p>
        <p>I never said he stole <em>your</em> money</p>

    letter-spacing

        h1 {
            font-family: 'COUTUREBold';
            margin: 0;
            font-size: 38px;
        }

        .wide {
            font-size: 24px;
            letter-spacing: .5em;
        }

        .narrow {
            font-size: 48px;
            letter-spacing: -.15em;
        }

        Letter spacing is useful when you need to adjust a custom
        font that has too much or too little space.

        It can also be aethetically pleasing in some cases to use
        letter spacing for things like headers sometimes.

    line-height

        Line height adjusts the space between lines in wrapped text.

        Adding line height can increase readability.

            p.line-height {
                line-height: 1.5;
            }

    text-transform

        Simply changes the case of the given text.

        You could use this to force your heading tags to be all
        uppercase, or to capitalise every word.

    text-shadow

        Adds a shadow around the text in the selected element.

        Best used sparingly.

        Great for headings and other presentational text.

    ellipsis

        Not a single property.

        With the text-overflow property, you can truncate overflowing
        text with an ellipsis.

        Making an overflow occur requires more properties
        because the default behaviour of text is simply printing outside
        its container isn't considered an overflow.

        The full snippet is:

            .overflowing {
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
            }

        Read this when needing this feature:

        https://css-tricks.com/snippets/css/truncate-string-with-ellipsis/
