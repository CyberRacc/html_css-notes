## Introduction ##

    HTML Tables allow you to create two-dimensional tables made of rows and columns.
    In this lesson, you will learn everything you need to know about HTML Tables.

## Learning Outcomes ##

    By the end of this lesson, you should be able to do the following:

        Create advanced HTML tables.

## HTML Tables ##

    Some data just really needs to be displayed in a table. HTML tables might be less
    commonly used than buttons, links, lists and everything else you've learned so far,
    but there are some cases where they're the perfect tool. Some of the more advanced
    features can get a little tricky to set up correctly, but getting started with tables
    is pretty easy. You create a table with <table></table> tags and then put the elements
    for rows, columns, headers, or anything else that's possible inside those table
    elements.

## HTML Table Basics ##

    This covers the very basics, such as rows, cells, headings, making cells span multiple
    columns and rows, and how to group together all the cells in a column for styling purposes.

## What is a table? ##

    A table is a structured set of data, made up of rows and columns (tabular data).
    A table allows you to quickly and easily look up values that indicate some kind of
    connection between different types of data, for example a person and their age,
    or a day of the week, or the timetable for a local swimming pool.

        |-------------|
        |Person | Age |
        |-------------|
        |Chris  | 38  |
        |Dennis | 45  |
        |-------------|

## How does a table work? ##

    The point of a table is that it's rigid. Information is easily interpreted by making visual
    associations between row and collumn headers.

    When implemented correctly, HTML tables are handled well by accessibility tools such as
    screen readers, so a successful HTML table should enhace the experience of sighted and
    visually impaired users alike.

## When should you NOT use HTML tables? ##

    HTML tables should be used for tabular data - this is what they are designed for.
    Do not use them to lay out web pages, they reduce accessibility for visually impaired
    users. Tables also make it a lot harder to write, maintain and debug code.

    Tables are not automatically responsive: 

        When you use proper layout containers (such as <header>, <section>, <article>, or <div>),
        their width defaults to 100% of their parent element. Tables on the other hand are sized
        according to their content by default, so extra measures areneeded to get table
        layout styling to effectively work across a variety of devices.

## Creating a table ##

    We've talked table theory enough, so, let's dive into a practical example
    and build up a simple table.

    The content of every table is enclosed by these two tags: <table></table>.
    Add these inside the body of your HTML.
    The smallest container inside a table is a table cell, which is created by
    a <td> element ('td' stands for 'table data'). Add the following inside your table tags:

    html

<td>Hi, I'm your first cell.</td>

If we want a row of four cells, we need to copy these tags three times.
Update the contents of your table to look like so:

html

    <td>Hi, I'm your first cell.</td>
    <td>I'm your second cell.</td>
    <td>I'm your third cell.</td>
    <td>I'm your fourth cell.</td>

As you will see, the cells are not placed underneath each other, rather they are
automatically aligned with each other on the same row. Each <td> element creates a single cell and together they make up the first row. Every cell we add makes the row grow longer.

To stop this row from growing and start placing subsequent cells on a second row,
we need to use the <tr> element ('tr' stands for 'table row'). Let's investigate this now.

    Place the four cells you've already created inside <tr> tags, like so:

    html

<tr>
  <td>Hi, I'm your first cell.</td>
  <td>I'm your second cell.</td>
  <td>I'm your third cell.</td>
  <td>I'm your fourth cell.</td>
</tr>

Now you've made one row, have a go at making one or two more â€” each row needs
to be wrapped in an additional <tr> element, with each cell contained in a <td>.